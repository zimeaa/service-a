{"version":3,"file":"instrumentation.js","sourceRoot":"","sources":["../../src/instrumentation.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as path from 'path';\nimport * as fs from 'fs';\n\nimport {\n  InstrumentationBase,\n  InstrumentationNodeModuleDefinition,\n  InstrumentationNodeModuleFile,\n  isWrapped,\n  safeExecuteInTheMiddle,\n} from '@opentelemetry/instrumentation';\nimport {\n  Context as OtelContext,\n  context as otelContext,\n  diag,\n  trace,\n  propagation,\n  MeterProvider,\n  Span,\n  SpanKind,\n  SpanStatusCode,\n  TextMapGetter,\n  TracerProvider,\n  ROOT_CONTEXT,\n  Attributes,\n} from '@opentelemetry/api';\nimport {\n  ATTR_URL_FULL,\n  SEMATTRS_FAAS_EXECUTION,\n  SEMRESATTRS_CLOUD_ACCOUNT_ID,\n  SEMRESATTRS_FAAS_ID,\n} from '@opentelemetry/semantic-conventions';\nimport { ATTR_FAAS_COLDSTART } from './semconv';\n\nimport {\n  APIGatewayProxyEventHeaders,\n  Callback,\n  Context,\n  Handler,\n} from 'aws-lambda';\n\nimport { AwsLambdaInstrumentationConfig, EventContextExtractor } from './types';\n/** @knipignore */\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport { LambdaModule } from './internal-types';\n\nconst headerGetter: TextMapGetter<APIGatewayProxyEventHeaders> = {\n  keys(carrier): string[] {\n    return Object.keys(carrier);\n  },\n  get(carrier, key: string) {\n    return carrier[key];\n  },\n};\n\nexport const lambdaMaxInitInMilliseconds = 10_000;\n\nexport class AwsLambdaInstrumentation extends InstrumentationBase<AwsLambdaInstrumentationConfig> {\n  private declare _traceForceFlusher?: () => Promise<void>;\n  private declare _metricForceFlusher?: () => Promise<void>;\n\n  constructor(config: AwsLambdaInstrumentationConfig = {}) {\n    super(PACKAGE_NAME, PACKAGE_VERSION, config);\n  }\n\n  init() {\n    const taskRoot = process.env.LAMBDA_TASK_ROOT;\n    const handlerDef = this.getConfig().lambdaHandler ?? process.env._HANDLER;\n\n    // _HANDLER and LAMBDA_TASK_ROOT are always defined in Lambda but guard bail out if in the future this changes.\n    if (!taskRoot || !handlerDef) {\n      this._diag.debug(\n        'Skipping lambda instrumentation: no _HANDLER/lambdaHandler or LAMBDA_TASK_ROOT.',\n        { taskRoot, handlerDef }\n      );\n      return [];\n    }\n\n    const handler = path.basename(handlerDef);\n    const moduleRoot = handlerDef.substring(\n      0,\n      handlerDef.length - handler.length\n    );\n\n    const [module, functionName] = handler.split('.', 2);\n\n    // Lambda loads user function using an absolute path.\n    let filename = path.resolve(taskRoot, moduleRoot, module);\n    if (!filename.endsWith('.js')) {\n      // It's impossible to know in advance if the user has a js, mjs or cjs file.\n      // Check that the .js file exists otherwise fallback to the next known possibilities (.mjs, .cjs).\n      try {\n        fs.statSync(`${filename}.js`);\n        filename += '.js';\n      } catch (e) {\n        try {\n          fs.statSync(`${filename}.mjs`);\n          // fallback to .mjs (ESM)\n          filename += '.mjs';\n        } catch (e2) {\n          try {\n            fs.statSync(`${filename}.cjs`);\n            // fallback to .cjs (CommonJS)\n            filename += '.cjs';\n          } catch (e3) {\n            this._diag.warn(\n              'No handler file was able to resolved with one of the known extensions for the file',\n              filename\n            );\n          }\n        }\n      }\n    }\n\n    diag.debug('Instrumenting lambda handler', {\n      taskRoot,\n      handlerDef,\n      handler,\n      moduleRoot,\n      module,\n      filename,\n      functionName,\n    });\n\n    const lambdaStartTime =\n      this.getConfig().lambdaStartTime ||\n      Date.now() - Math.floor(1000 * process.uptime());\n\n    return [\n      new InstrumentationNodeModuleDefinition(\n        // NB: The patching infrastructure seems to match names backwards, this must be the filename, while\n        // InstrumentationNodeModuleFile must be the module name.\n        filename,\n        ['*'],\n        undefined,\n        undefined,\n        [\n          new InstrumentationNodeModuleFile(\n            module,\n            ['*'],\n            (moduleExports: LambdaModule) => {\n              if (isWrapped(moduleExports[functionName])) {\n                this._unwrap(moduleExports, functionName);\n              }\n              this._wrap(\n                moduleExports,\n                functionName,\n                this._getHandler(lambdaStartTime)\n              );\n              return moduleExports;\n            },\n            (moduleExports?: LambdaModule) => {\n              if (moduleExports == null) return;\n              this._unwrap(moduleExports, functionName);\n            }\n          ),\n        ]\n      ),\n    ];\n  }\n\n  private _getHandler(handlerLoadStartTime: number) {\n    return (original: Handler) => {\n      return this._getPatchHandler(original, handlerLoadStartTime);\n    };\n  }\n\n  private _getPatchHandler(original: Handler, lambdaStartTime: number) {\n    diag.debug('patch handler function');\n    const plugin = this;\n\n    let requestHandledBefore = false;\n    let requestIsColdStart = true;\n\n    function _onRequest(): void {\n      if (requestHandledBefore) {\n        // Non-first requests cannot be coldstart.\n        requestIsColdStart = false;\n      } else {\n        if (\n          process.env.AWS_LAMBDA_INITIALIZATION_TYPE ===\n          'provisioned-concurrency'\n        ) {\n          // If sandbox environment is initialized with provisioned concurrency,\n          // even the first requests should not be considered as coldstart.\n          requestIsColdStart = false;\n        } else {\n          // Check whether it is proactive initialization or not:\n          // https://aaronstuyvenberg.com/posts/understanding-proactive-initialization\n          const passedTimeSinceHandlerLoad: number =\n            Date.now() - lambdaStartTime;\n          const proactiveInitialization: boolean =\n            passedTimeSinceHandlerLoad > lambdaMaxInitInMilliseconds;\n\n          // If sandbox has been initialized proactively before the actual request,\n          // even the first requests should not be considered as coldstart.\n          requestIsColdStart = !proactiveInitialization;\n        }\n        requestHandledBefore = true;\n      }\n    }\n\n    return function patchedHandler(\n      this: never,\n      // The event can be a user type, it truly is any.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      event: any,\n      context: Context,\n      callback: Callback\n    ) {\n      _onRequest();\n\n      const config = plugin.getConfig();\n      const parent = AwsLambdaInstrumentation._determineParent(\n        event,\n        context,\n        config.eventContextExtractor ||\n          AwsLambdaInstrumentation._defaultEventContextExtractor\n      );\n\n      const name = context.functionName;\n      const span = plugin.tracer.startSpan(\n        name,\n        {\n          kind: SpanKind.SERVER,\n          attributes: {\n            [SEMATTRS_FAAS_EXECUTION]: context.awsRequestId,\n            [SEMRESATTRS_FAAS_ID]: context.invokedFunctionArn,\n            [SEMRESATTRS_CLOUD_ACCOUNT_ID]:\n              AwsLambdaInstrumentation._extractAccountId(\n                context.invokedFunctionArn\n              ),\n            [ATTR_FAAS_COLDSTART]: requestIsColdStart,\n            ...AwsLambdaInstrumentation._extractOtherEventFields(event),\n          },\n        },\n        parent\n      );\n\n      const { requestHook } = config;\n      if (requestHook) {\n        safeExecuteInTheMiddle(\n          () => requestHook(span, { event, context }),\n          e => {\n            if (e)\n              diag.error('aws-lambda instrumentation: requestHook error', e);\n          },\n          true\n        );\n      }\n\n      return otelContext.with(trace.setSpan(parent, span), () => {\n        // Lambda seems to pass a callback even if handler is of Promise form, so we wrap all the time before calling\n        // the handler and see if the result is a Promise or not. In such a case, the callback is usually ignored. If\n        // the handler happened to both call the callback and complete a returned Promise, whichever happens first will\n        // win and the latter will be ignored.\n        const wrappedCallback = plugin._wrapCallback(callback, span);\n        const maybePromise = safeExecuteInTheMiddle(\n          () => original.apply(this, [event, context, wrappedCallback]),\n          error => {\n            if (error != null) {\n              // Exception thrown synchronously before resolving callback / promise.\n              plugin._applyResponseHook(span, error);\n              plugin._endSpan(span, error, () => {});\n            }\n          }\n        ) as Promise<{}> | undefined;\n        if (typeof maybePromise?.then === 'function') {\n          return maybePromise.then(\n            value => {\n              plugin._applyResponseHook(span, null, value);\n              return new Promise(resolve =>\n                plugin._endSpan(span, undefined, () => resolve(value))\n              );\n            },\n            (err: Error | string) => {\n              plugin._applyResponseHook(span, err);\n              return new Promise((resolve, reject) =>\n                plugin._endSpan(span, err, () => reject(err))\n              );\n            }\n          );\n        }\n        return maybePromise;\n      });\n    };\n  }\n\n  override setTracerProvider(tracerProvider: TracerProvider) {\n    super.setTracerProvider(tracerProvider);\n    this._traceForceFlusher = this._traceForceFlush(tracerProvider);\n  }\n\n  private _traceForceFlush(tracerProvider: TracerProvider) {\n    if (!tracerProvider) return undefined;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let currentProvider: any = tracerProvider;\n\n    if (typeof currentProvider.getDelegate === 'function') {\n      currentProvider = currentProvider.getDelegate();\n    }\n\n    if (typeof currentProvider.forceFlush === 'function') {\n      return currentProvider.forceFlush.bind(currentProvider);\n    }\n\n    return undefined;\n  }\n\n  override setMeterProvider(meterProvider: MeterProvider) {\n    super.setMeterProvider(meterProvider);\n    this._metricForceFlusher = this._metricForceFlush(meterProvider);\n  }\n\n  private _metricForceFlush(meterProvider: MeterProvider) {\n    if (!meterProvider) return undefined;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const currentProvider: any = meterProvider;\n\n    if (typeof currentProvider.forceFlush === 'function') {\n      return currentProvider.forceFlush.bind(currentProvider);\n    }\n\n    return undefined;\n  }\n\n  private _wrapCallback(original: Callback, span: Span): Callback {\n    const plugin = this;\n    return function wrappedCallback(this: never, err, res) {\n      diag.debug('executing wrapped lookup callback function');\n      plugin._applyResponseHook(span, err, res);\n\n      plugin._endSpan(span, err, () => {\n        diag.debug('executing original lookup callback function');\n        return original.apply(this, [err, res]);\n      });\n    };\n  }\n\n  private _endSpan(\n    span: Span,\n    err: string | Error | null | undefined,\n    callback: () => void\n  ) {\n    if (err) {\n      span.recordException(err);\n    }\n\n    let errMessage;\n    if (typeof err === 'string') {\n      errMessage = err;\n    } else if (err) {\n      errMessage = err.message;\n    }\n    if (errMessage) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: errMessage,\n      });\n    }\n\n    span.end();\n\n    const flushers = [];\n    if (this._traceForceFlusher) {\n      flushers.push(this._traceForceFlusher());\n    } else {\n      diag.debug(\n        'Spans may not be exported for the lambda function because we are not force flushing before callback.'\n      );\n    }\n    if (this._metricForceFlusher) {\n      flushers.push(this._metricForceFlusher());\n    } else {\n      diag.debug(\n        'Metrics may not be exported for the lambda function because we are not force flushing before callback.'\n      );\n    }\n\n    Promise.all(flushers).then(callback, callback);\n  }\n\n  private _applyResponseHook(\n    span: Span,\n    err?: Error | string | null,\n    res?: any\n  ) {\n    const { responseHook } = this.getConfig();\n    if (responseHook) {\n      safeExecuteInTheMiddle(\n        () => responseHook(span, { err, res }),\n        e => {\n          if (e)\n            diag.error('aws-lambda instrumentation: responseHook error', e);\n        },\n        true\n      );\n    }\n  }\n\n  private static _extractAccountId(arn: string): string | undefined {\n    const parts = arn.split(':');\n    if (parts.length >= 5) {\n      return parts[4];\n    }\n    return undefined;\n  }\n\n  private static _defaultEventContextExtractor(event: any): OtelContext {\n    // The default extractor tries to get sampled trace header from HTTP headers.\n    const httpHeaders = event.headers || {};\n    return propagation.extract(otelContext.active(), httpHeaders, headerGetter);\n  }\n\n  private static _extractOtherEventFields(event: any): Attributes {\n    const answer: Attributes = {};\n    const fullUrl = this._extractFullUrl(event);\n    if (fullUrl) {\n      answer[ATTR_URL_FULL] = fullUrl;\n    }\n    return answer;\n  }\n\n  private static _extractFullUrl(event: any): string | undefined {\n    // API gateway encodes a lot of url information in various places to recompute this\n    if (!event.headers) {\n      return undefined;\n    }\n    // Helper function to deal with case variations (instead of making a tolower() copy of the headers)\n    function findAny(\n      event: any,\n      key1: string,\n      key2: string\n    ): string | undefined {\n      return event.headers[key1] ?? event.headers[key2];\n    }\n    const host = findAny(event, 'host', 'Host');\n    const proto = findAny(event, 'x-forwarded-proto', 'X-Forwarded-Proto');\n    const port = findAny(event, 'x-forwarded-port', 'X-Forwarded-Port');\n    if (!(proto && host && (event.path || event.rawPath))) {\n      return undefined;\n    }\n    let answer = proto + '://' + host;\n    if (port) {\n      answer += ':' + port;\n    }\n    answer += event.path ?? event.rawPath;\n    if (event.queryStringParameters) {\n      let first = true;\n      for (const key in event.queryStringParameters) {\n        answer += first ? '?' : '&';\n        answer += encodeURIComponent(key);\n        answer += '=';\n        answer += encodeURIComponent(event.queryStringParameters[key]);\n        first = false;\n      }\n    }\n    return answer;\n  }\n\n  private static _determineParent(\n    event: any,\n    context: Context,\n    eventContextExtractor: EventContextExtractor\n  ): OtelContext {\n    const extractedContext = safeExecuteInTheMiddle(\n      () => eventContextExtractor(event, context),\n      e => {\n        if (e)\n          diag.error(\n            'aws-lambda instrumentation: eventContextExtractor error',\n            e\n          );\n      },\n      true\n    );\n    if (trace.getSpan(extractedContext)?.spanContext()) {\n      return extractedContext;\n    }\n    return ROOT_CONTEXT;\n  }\n}\n"]}