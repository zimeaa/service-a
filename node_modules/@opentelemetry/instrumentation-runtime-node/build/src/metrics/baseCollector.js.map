{"version":3,"file":"baseCollector.js","sourceRoot":"","sources":["../../../src/metrics/baseCollector.ts"],"names":[],"mappings":";;;AAmBA,MAAsB,aAAa;IACvB,OAAO,GAAqC,EAAE,CAAC;IAE/C,UAAU,CAAS;IAE7B,YACE,SAA2C,EAAE,EAC7C,UAAkB;QAElB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC/B,CAAC;IAEM,OAAO;QACZ,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAEM,MAAM;QACX,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;CAOF;AA5BD,sCA4BC","sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { MetricCollector } from '../types/metricCollector';\nimport { Meter } from '@opentelemetry/api';\nimport { RuntimeNodeInstrumentationConfig } from '../types';\n\nexport abstract class BaseCollector implements MetricCollector {\n  protected _config: RuntimeNodeInstrumentationConfig = {};\n\n  protected namePrefix: string;\n\n  protected constructor(\n    config: RuntimeNodeInstrumentationConfig = {},\n    namePrefix: string\n  ) {\n    this._config = config;\n    this.namePrefix = namePrefix;\n  }\n\n  public disable(): void {\n    this._config.enabled = false;\n    this.internalDisable();\n  }\n\n  public enable(): void {\n    this._config.enabled = true;\n    this.internalEnable();\n  }\n\n  public abstract updateMetricInstruments(meter: Meter): void;\n\n  protected abstract internalEnable(): void;\n\n  protected abstract internalDisable(): void;\n}\n"]}